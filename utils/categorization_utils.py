from nvd_lookup import get_cvss_score

def categorize_vulnerabilities(nmap_result, nikto_result, zap_result, endpoint):
    categorized = {
        "critical": [],
        "high": [],
        "medium": [],
        "low": [],
        "info": []
    }

    print(nmap_result)

    for host in nmap_result.all_hosts():
        for proto in nmap_result[host].all_protocols():
            for port in nmap_result[host][proto].keys:
                service = nmap_result[host][proto][port]['name']
                cve_id = nmap_result[host][proto][port].get('cpe', None)

                if cve_id:
                    cvss_score = get_cvss_score(cve_id)

                    if cvss_score:
                        if cvss_score >= 9.0:
                            categorized['critical'].append(f"Nmap found critical issue on {endpoint}: {cve_id}")
                        elif cvss_score >= 7.0:
                            categorized['high'].append(f"Nmap found high issue on {endpoint}: {cve_id}")
                        elif cvss_score >= 4.0:
                            categorized['medium'].append(f"Nmap found medium issue on {endpoint}: {cve_id}")
                        else:
                            categorized['low'].append(f"Nmap found low issue on {endpoint}: {cve_id}")
                else:
                    categorized['info'].append(f"Nmap found open port {port}/{proto} running {service} on {host}")


    for item in nikto_result['findings']:
        severity = item['severity'].lower()
        categorized[severity].append(f"Nikto found {item['description']} on {endpoint}")

    for alert in zap_result:
        risk = alert['risk'].lower()
        categorized[risk].append(f"ZAP found {alert['name']} on {alert['url']}")

    return categorized
